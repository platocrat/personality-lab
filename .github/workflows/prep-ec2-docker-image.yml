name: Prepare Docker Image for EC2

env:
  SSH_KEY: ${{ secrets.SSH_KEY }}
  EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
  EC2_HOSTNAME: ${{ secrets.EC2_HOSTNAME }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_HUB_REPOSITORY: ${{ secrets.DOCKER_HUB_REPOSITORY }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  # Auth0 environment variables
  AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
  AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
  AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}

on:
  push:
    branches: [ "main", "feat/dynamodb" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: 0. Extract Auth0 environment variables to create .env.local file
        run: |
          touch .env.local
          echo -e "AUTH0_SECRET=$AUTH0_SECRET\nAUTH0_BASE_URL=$AUTH0_BASE_URL\nAUTH0_ISSUER_BASE_URL=$AUTH0_ISSUER_BASE_URL\nAUTH0_CLIENT_ID=$AUTH0_CLIENT_ID\nAUTH0_CLIENT_SECRET=$AUTH0_CLIENT_SECRET" > .env.local

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image with cache
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_REPOSITORY }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 5. Create SSH key
        run: |
          echo "$SSH_KEY" > ssh_key && chmod 600 ssh_key

      - name: 6. SSH into EC2 instance, prune Docker system data, and pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh_key $EC2_USERNAME@$EC2_HOSTNAME '
            sudo docker system prune -a -f &&
            sudo docker pull platocrat/personality-lab-app
          '